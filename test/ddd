curl -k --cert client.pem --key client.key https://ka.elk.minems.com:9191


1.生成一个CA的私钥
openssl genrsa 2048 > ca.key

2.根据CA的私钥，生成一份自签名的CA根证书
openssl req -new -x509 -days 36500 -key ca.key -out ca.pem \
  -subj "/C=cn/O=Minems/OU=Minems/CN=ca/emailAddress=ca@Minems.com"


3.生成服务端私钥\证书CSR
openssl req -newkey rsa:2048 -days 36500 -nodes -keyout server.key -out server.csr \
   -subj "/CN=server/OU=Minems/O=Minems/" \
   -config ./openssl.cnf -extensions v3_req

4.使用前面生成的CA根证书对服务端的CSR签名，生成服务端证书
openssl x509 -req -days 36500 \
  -in server.csr -out server.pem \
  -CA ca.pem -CAkey ca.key -CAcreateserial \
  -extfile ./openssl.cnf -extensions v3_req

5.生成客户端私钥\证书CSR
 openssl req -newkey rsa:2048 -days 36500 -nodes -keyout client.key -out client.csr \
   -subj "/CN=client/OU=Minems/O=Minems/" \
   -config ./openssl.cnf -extensions v3_req


6.使用前面生成的CA根证书对客户端证的CSR签名，生成客户端证书
openssl x509 -req -days 36500 \
  -in client.csr -out client.pem \
  -CA ca.pem -CAkey ca.key -CAcreateserial \
  -extfile ./openssl.cnf -extensions v3_req


第四步：检查生成的服务端和客户端证书

openssl x509 -noout -text -in server.pem
openssl x509 -noout -text -in client.pem


生成truststore

keytool -import -noprompt -file ca.pem \
  -keystore truststore.jks -storepass g3gwg32fw


生成服务端keystore

生成服务端的P12格式证书
openssl pkcs12 -export \
  -in server.pem -inkey server.key \
  -out server.p12 -passout pass:g3gwg32fw

生成服务端的JKS格式证书
keytool -importkeystore \
  -srckeystore server.p12 -srcstoretype PKCS12 \
  -destkeystore server.keystore.jks \
  -srcstorepass g3gwg32fw -deststorepass g3gwg32fw




生成客户端keystore
openssl pkcs12 -export \
  -in client.pem -inkey client.key -out client.p12 \
  -passout pass:g3gwg32fw

生成客户端的JKS格式证书
keytool -importkeystore \
  -srckeystore client.p12 -srcstoretype PKCS12 \
  -destkeystore client.keystore.jks \
  -srcstorepass g3gwg32fw -deststorepass g3gwg32fw

验证JKS证书的内容
keytool --list -keystore client.keystore.jks -storepass g3gwg32fw
keytool --list -keystore server.keystore.jks -storepass g3gwg32fw
keytool --list -keystore truststore.jks -storepass g3gwg32fw





#生成ca私钥
openssl genrsa 2048 > ca.key

#使用ca私钥建立ca证书
openssl req -new -x509 -nodes -days 1000 -key ca.key -subj /CN=elkCA\ CA/OU=Development\ group/O=HomeIT\ SIA/DC=elk/DC=com > ca.crt

#生成服务器csr证书请求文件
openssl req -newkey rsa:2048 -days 1000 -nodes -keyout server.key -subj /CN=logstash.elk.minems.com/OU=Development\ group/O=Home\ SIA/DC=elk/DC=com > server.csr

#使用ca证书与私钥签发服务器证书
openssl x509 -req -in server.csr -days 1000 -CA ca.crt -CAkey ca.key -set_serial 01 > server.crt

#生成客户端csr证书请求文件
openssl req -newkey rsa:2048 -days 1000 -nodes -keyout client.key -subj /CN=logstash.elk.minems.com/OU=Development\ group/O=Home\ SIA/DC=elk/DC=com > client.csr

#使用ca证书与私钥签发客户端证书
openssl x509 -req -in client.csr -days 1000 -CA ca.crt -CAkey ca.key -set_serial 01 > client.crt